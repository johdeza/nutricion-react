{"version":3,"sources":["views/pages/utils/Alertas.js","views/pages/categorias/Categorias.js"],"names":["Alertas","props","Swal","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","AlertaFormulario","mensaje","AlertaMensajeExito","Categorias","useState","consulta","setConsulta","modal","setModal","categorias","setCategorias","id","name","categoria","setCategoria","useEffect","a","axios","get","resultado","data","console","log","obtenerCategoria","details","setDetails","handleChange","e","target","value","prevState","editarCategoria","consola","caso","grabar","post","alertas","response","eliminar","eliminarCategoria","error","className","onClick","size","color","items","fields","key","label","_style","width","sorter","filter","columnFilter","tableFilter","footer","itemsPerPageSelect","itemsPerPage","hover","pagination","scopedSlots","item","index","variant","shape","position","indexOf","newDetails","slice","splice","toggleDetails","includes","show","onClose","closeButton","onChange","placeholder","hidden"],"mappings":"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","file":"static/js/38.18ec782d.chunk.js","sourcesContent":["import Swal from 'sweetalert2';\r\n\r\nconst Alertas = (props) => {\r\n    Swal.fire({\r\n        title: '¿Eliminar Actividad?',\r\n        text: \"Está seguro de eliminar esta Actividad!\",\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Si, eliminar!'\r\n        }).then((result) => {\r\n        if (result.isConfirmed) {\r\n            Swal.fire(\r\n            'Eliminado!',\r\n            'Actividad eliminada correctamente',\r\n            'success'\r\n            )\r\n        }\r\n        })\r\n}\r\n\r\nconst AlertaFormulario=(mensaje)=>{\r\n    Swal.fire({\r\n        icon: 'error',\r\n        title: 'Error...',\r\n        text: mensaje,\r\n      })\r\n}\r\n\r\nconst AlertaMensajeExito = (mensaje)=>{\r\n    Swal.fire({\r\n        icon: 'success',\r\n        title: 'Exito...',\r\n        text: mensaje,\r\n      })\r\n}\r\nexport default {Alertas, AlertaFormulario, AlertaMensajeExito};","import CIcon from '@coreui/icons-react'\r\nimport React,{useState, useEffect} from 'react'\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CDataTable,\r\n  CButton,\r\n  CCollapse,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CFormGroup,\r\n  CInputGroup,\r\n  CInputGroupPrepend,\r\n  CInputGroupText,\r\n  CInput,\r\n} from '@coreui/react'\r\nimport axios from 'axios';\r\n// import {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Swal from 'sweetalert2';\r\nimport alertas from '../utils/Alertas';\r\n\r\nconst Categorias = () => {\r\n\r\n  const [consulta, setConsulta] = useState(true);\r\n  const [modal, setModal] = useState(false);\r\n  const [categorias, setCategorias] = useState([]);\r\n  const [categoria, setCategoria] = useState({\r\n    id:'',\r\n    name:''\r\n  });\r\n\r\n  useEffect(() => {\r\n    const obtenerCategoria = async () => {\r\n      try {\r\n        const resultado = await axios.get('http://3.90.64.114/api/v1/web/aliments-categories');\r\n        setCategorias(resultado.data);\r\n        setConsulta(false);\r\n        console.log(categorias);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    obtenerCategoria();\r\n  }, [consulta]);\r\n\r\n  const [details, setDetails] = useState([])\r\n\r\n  const toggleDetails = (index) => {\r\n    const position = details.indexOf(index)\r\n    let newDetails = details.slice()\r\n    if (position !== -1) {\r\n      newDetails.splice(position, 1)\r\n    } else {\r\n      newDetails = [...details, index]\r\n    }\r\n    setDetails(newDetails)\r\n  }\r\n\r\n  const fields = [\r\n    { key: 'id', label:'Id', _style: { width: '10%'} },\r\n    { key: 'name', label:'Categoría', _style: { width: '40%'} },\r\n    {\r\n      key: 'Opciones',\r\n      label: '',\r\n      _style: { width: '1%' },\r\n      sorter: false,\r\n      filter: false\r\n    }\r\n  ]\r\n\r\n  const agregar=()=>\r\n  {\r\n    setCategoria({\r\n      id:'',\r\n      name:''\r\n    });\r\n    setModal(!modal);\r\n  }\r\n\r\n  const editar=()=>{  \r\n    setModal(!modal)\r\n  }\r\n\r\n   const handleChange= e =>{\r\n    const {name, value} = e.target;\r\n    setCategoria(prevState=>({\r\n      ...prevState,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const editarCategoria=(consola, caso)=>{\r\n    console.log(consola);\r\n    setCategoria(consola);\r\n    editar();\r\n  }\r\n\r\n  const grabar=async()=>{\r\n    try {\r\n        await axios.post('http://3.90.64.114/api/v1/web/aliments-categories', categoria);\r\n        setConsulta(true);\r\n        alertas.AlertaMensajeExito(\"Categoria-Alimento ingresado correctamente\");\r\n        setModal(!modal)\r\n    } catch (error) {\r\n      \r\n      alertas.AlertaFormulario(error.response.data);\r\n    }\r\n  };\r\n    \r\n   const eliminar = async(id)=>{\r\n    Swal.fire({\r\n      title: '¿Eliminar Categoría?',\r\n      text: \"Está seguro de eliminar esta Categoria!\",\r\n      icon: 'warning',\r\n      confirmButtonColor: '#3085d6',\r\n      confirmButtonText: 'Si, eliminar!',\r\n      showCancelButton: true,\r\n      cancelButtonColor: '#d33',\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        eliminarCategoria();\r\n        Swal.fire(\r\n          'Eliminado!',\r\n          'Categoria eliminada correctamente',\r\n          'success'\r\n        )\r\n      }\r\n    })\r\n  }\r\n\r\n  const eliminarCategoria = async () => {\r\n    try {\r\n      // const resultado = await axios.get('http://3.90.64.114/api/v1/web/activities');\r\n      // setActividades(resultado.data);\r\n      // setConsulta(true);\r\n      console.log(categoria);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <>\r\n    <CRow>\r\n        <CCol>\r\n          <CCard>\r\n            <CCardHeader>\r\n              Categorías\r\n              <CIcon name=\"cil-plus\" className=\"mfe-2\" /> \r\n              <CButton \r\n              onClick={() =>  agregar()} \r\n              className=\"mr-1\"\r\n              size=\"sm\" \r\n              color=\"primary\"\r\n            >Nuevo</CButton>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n            <CDataTable\r\n              items={categorias}\r\n              fields={fields}\r\n              columnFilter\r\n              tableFilter\r\n              footer\r\n              itemsPerPageSelect\r\n              itemsPerPage={5}\r\n              hover\r\n              sorter\r\n              pagination\r\n              scopedSlots = {{\r\n                'Opciones':\r\n                  (item, index)=>{\r\n                    return (\r\n                      <td className=\"py-2\">\r\n                        <CButton\r\n                          color=\"primary\"\r\n                          variant=\"outline\"\r\n                          shape=\"square\"\r\n                          size=\"sm\"\r\n                          onClick={()=>{toggleDetails(index)}}\r\n                        >\r\n                          {details.includes(index) ? 'Ocultar' : 'Opciones'}\r\n                        </CButton>\r\n                      </td>\r\n                      )\r\n                  },\r\n                'details':\r\n                    (item, index)=>{\r\n                      return (\r\n                      <CCollapse show={details.includes(index)}>\r\n                        <CCardBody>\r\n                          <h4>\r\n                            {item.name}\r\n                          </h4>\r\n                          <p className=\"text-muted\">{/*User since: {item.categoria}} */}</p>\r\n                          <CButton key={item.id} size=\"sm\" color=\"info\"\r\n                           onClick={()=>editarCategoria(item, 'Editar')}>\r\n                          <CIcon name=\"cil-pencil\" className=\"mfe-2\" /> \r\n                            Editar\r\n                          </CButton>\r\n                          <CButton onClick={()=>eliminar(item.id)}\r\n                          size=\"sm\" color=\"danger\" className=\"ml-1\">\r\n                          <CIcon name=\"cil-trash\" className=\"mfe-2\" /> \r\n                            Eliminar\r\n                          </CButton>\r\n                        </CCardBody>\r\n                      </CCollapse>\r\n                    )\r\n                  }\r\n              }}/>\r\n      </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n\r\n      {/* Modal agregar */}\r\n     <CRow>\r\n      <CCol>\r\n        <CCard>\r\n          <CCardBody>\r\n            <CModal \r\n              show={modal} \r\n              onClose={setModal}\r\n            >\r\n              <CModalHeader closeButton>\r\n                <CModalTitle>Categoría</CModalTitle>\r\n              </CModalHeader>\r\n              <CModalBody>\r\n              <CFormGroup>\r\n                  <CInputGroup>\r\n                    <CInputGroupPrepend>\r\n                      <CInputGroupText>Nombre:</CInputGroupText>\r\n                    </CInputGroupPrepend>\r\n                    <CInput name=\"id\" onChange={handleChange} value={categoria.id} placeholder=\"id\" hidden />\r\n                    <CInput name=\"name\" onChange={handleChange} value={categoria.name} placeholder=\"Nombre\" />\r\n                  </CInputGroup>\r\n                </CFormGroup>\r\n                \r\n              </CModalBody>\r\n              <CModalFooter>                \r\n                <CButton \r\n                  color=\"danger\" \r\n                  onClick={() => setModal(false)}\r\n                >\r\n                  <CIcon name=\"cil-x-circle\" className=\"md\" />\r\n                  {' '}Cancelar\r\n                  </CButton>\r\n                <CButton color=\"primary\" onClick={()=>grabar()}>\r\n                <CIcon name=\"cil-save\" className=\"mfe-2\" />\r\n                 Grabar\r\n                 </CButton>{' '}\r\n              </CModalFooter>\r\n            </CModal>\r\n            <hr />\r\n\r\n           </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n    </CRow>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Categorias;"],"sourceRoot":""}