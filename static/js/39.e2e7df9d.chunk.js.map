{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","views/pages/nutriologos/Nutriologos.js"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","Nutriologos","useState","nutriologos","setNutriologos","useEffect","a","axios","get","resultado","alimentoCategoria","data","map","item","nombre","user","name","console","log","obtenerNutriologos","details","setDetails","className","size","color","items","fields","key","label","_style","width","sorter","filter","columnFilter","tableFilter","footer","itemsPerPageSelect","itemsPerPage","hover","pagination","scopedSlots","index","variant","shape","onClick","position","indexOf","newDetails","slice","splice","toggleDetails","includes","show"],"mappings":"yOAIe,SAASA,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,OAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOH,MAAMO,KAAKJ,GFIvD,CAAgBJ,IAAQ,OAAAS,EAAA,GAA2BT,IGLvE,WACb,MAAM,IAAIU,UAAU,wIHIwE,K,6JIoI/EC,UAvHK,WAAO,IAAD,EAEcC,mBAAS,IAFvB,mBAEjBC,EAFiB,KAEJC,EAFI,KAIxBC,qBAAU,YACgB,uCAAG,8BAAAC,EAAA,+EAECC,IAAMC,IAAI,kDAFX,OAEjBC,EAFiB,OAGjBC,EAAoBD,EAAUE,KAAKC,KAAI,SAAAC,GAC3C,kCACKA,GADL,IAEAC,OAAQD,EAAKE,KAAKC,UAGtBC,QAAQC,IAAIR,GACZN,EAAeM,GAVU,gDAYvBO,QAAQC,IAAR,MAZuB,yDAAH,qDAexBC,KACC,IArBqB,MAuBMjB,mBAAS,IAvBf,mBAuBjBkB,EAvBiB,KAuBRC,EAvBQ,KAgDxB,OACE,oCACA,kBAAC,KAAD,KACI,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,sBAEE,kBAAC,IAAD,CAAOL,KAAK,WAAWM,UAAU,UACjC,kBAAC,IAAD,CAASC,KAAK,KAAKC,MAAM,WAAzB,UAIF,kBAAC,IAAD,KACA,kBAAC,IAAD,CACEC,MAAOtB,EACPuB,OA3BG,CACb,CAAEC,IAAK,KAAMC,MAAM,KAAMC,OAAQ,CAAEC,MAAO,QAC1C,CAAEH,IAAK,SAAUC,MAAM,gBAAcC,OAAQ,CAAEC,MAAO,QACtD,CACEH,IAAK,WACLC,MAAO,GACPC,OAAQ,CAAEC,MAAO,MACjBC,QAAQ,EACRC,QAAQ,IAoBAC,cAAY,EACZC,aAAW,EACXC,QAAM,EACNC,oBAAkB,EAClBC,aAAc,EACdC,OAAK,EACLP,QAAM,EACNQ,YAAU,EACVC,YAAe,CACb,SACE,SAAC3B,EAAM4B,GACL,OACE,wBAAInB,UAAU,QACZ,kBAAC,IAAD,CACEE,MAAM,UACNkB,QAAQ,UACRC,MAAM,SACNpB,KAAK,KACLqB,QAAS,YAzDX,SAACH,GACrB,IAAMI,EAAWzB,EAAQ0B,QAAQL,GAC7BM,EAAa3B,EAAQ4B,SACP,IAAdH,EACFE,EAAWE,OAAOJ,EAAU,GAE5BE,EAAU,sBAAO3B,GAAP,CAAgBqB,IAE5BpB,EAAW0B,GAiDyBG,CAAcT,KAE3BrB,EAAQ+B,SAASV,GAAS,UAAY,cAKjD,QACI,SAAC5B,EAAM4B,GACL,OACA,kBAAC,IAAD,CAAWW,KAAMhC,EAAQ+B,SAASV,IAChC,kBAAC,IAAD,KACE,4BACG5B,EAAKC,QAER,uBAAGQ,UAAU,eACb,kBAAC,IAAD,CAASC,KAAK,KAAKC,MAAM,QACzB,kBAAC,IAAD,CAAOR,KAAK,aAAaM,UAAU,UADnC,UAIA,kBAAC,IAAD,CAASC,KAAK,KAAKC,MAAM,SAASF,UAAU,QAC5C,kBAAC,IAAD,CAAON,KAAK,YAAYM,UAAU,UADlC","file":"static/js/39.e2e7df9d.chunk.js","sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import CIcon from '@coreui/icons-react'\r\nimport React,{useState, useEffect} from 'react'\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CButton,\r\n  CCollapse,\r\n  CDataTable\r\n} from '@coreui/react'\r\nimport axios from 'axios';\r\n// import {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Modal, ModalBody, ModalFooter, ModalHeader} from 'reactstrap';\r\n// import {faEdit, faTrashAlt} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Nutriologos = () => {\r\n\r\n  const [nutriologos, setNutriologos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const obtenerNutriologos = async () => {\r\n      try {\r\n        const resultado = await axios.get('http://3.90.64.114/api/v1/mobile/nutriologist/');\r\n        const alimentoCategoria = resultado.data.map(item=>{\r\n          return{\r\n            ...item,\r\n          nombre: item.user.name\r\n        }\r\n      })\r\n      console.log(alimentoCategoria);\r\n      setNutriologos(alimentoCategoria);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    obtenerNutriologos();\r\n  }, []);\r\n\r\n  const [details, setDetails] = useState([])\r\n\r\n  const toggleDetails = (index) => {\r\n    const position = details.indexOf(index)\r\n    let newDetails = details.slice()\r\n    if (position !== -1) {\r\n      newDetails.splice(position, 1)\r\n    } else {\r\n      newDetails = [...details, index]\r\n    }\r\n    setDetails(newDetails)\r\n  }\r\n\r\n  const fields = [\r\n    { key: 'id', label:'Id', _style: { width: '10%'} },\r\n    { key: 'nombre', label:'Nutriólogo', _style: { width: '40%'} },\r\n    {\r\n      key: 'Opciones',\r\n      label: '',\r\n      _style: { width: '1%' },\r\n      sorter: false,\r\n      filter: false\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <>\r\n    <CRow>\r\n        <CCol>\r\n          <CCard>\r\n            <CCardHeader>\r\n              Nutriólogos\r\n              <CIcon name=\"cil-plus\" className=\"mfe-2\" /> \r\n              <CButton size=\"sm\" color=\"primary\">\r\n                Nuevo  \r\n              </CButton>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n            <CDataTable\r\n              items={nutriologos}\r\n              fields={fields}\r\n              columnFilter\r\n              tableFilter\r\n              footer\r\n              itemsPerPageSelect\r\n              itemsPerPage={5}\r\n              hover\r\n              sorter\r\n              pagination\r\n              scopedSlots = {{\r\n                'Opciones':\r\n                  (item, index)=>{\r\n                    return (\r\n                      <td className=\"py-2\">\r\n                        <CButton\r\n                          color=\"primary\"\r\n                          variant=\"outline\"\r\n                          shape=\"square\"\r\n                          size=\"sm\"\r\n                          onClick={()=>{toggleDetails(index)}}\r\n                        >\r\n                          {details.includes(index) ? 'Ocultar' : 'Opciones'}\r\n                        </CButton>\r\n                      </td>\r\n                      )\r\n                  },\r\n                'details':\r\n                    (item, index)=>{\r\n                      return (\r\n                      <CCollapse show={details.includes(index)}>\r\n                        <CCardBody>\r\n                          <h4>\r\n                            {item.nombre}\r\n                          </h4>\r\n                          <p className=\"text-muted\">{/*User since: {item.categoria}} */}</p>\r\n                          <CButton size=\"sm\" color=\"info\">\r\n                          <CIcon name=\"cil-pencil\" className=\"mfe-2\" /> \r\n                            Editar\r\n                          </CButton>\r\n                          <CButton size=\"sm\" color=\"danger\" className=\"ml-1\">\r\n                          <CIcon name=\"cil-trash\" className=\"mfe-2\" /> \r\n                            Eliminar\r\n                          </CButton>\r\n                        </CCardBody>\r\n                      </CCollapse>\r\n                    )\r\n                  }\r\n              }}/>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>     \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Nutriologos;"],"sourceRoot":""}