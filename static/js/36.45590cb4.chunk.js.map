{"version":3,"sources":["views/pages/utils/Alertas.js","views/pages/actividades/Actividades.js"],"names":["Alertas","props","Swal","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","AlertaFormulario","mensaje","AlertaMensajeExito","Actividades","useState","actividades","setActividades","consulta","setConsulta","modal","setModal","name","actividad","setActividad","useEffect","a","axios","get","resultado","data","console","log","obtenerActividad","details","setDetails","handleChange","e","target","value","prevState","editarActividad","consola","caso","grabar","trim","alertas","post","eliminar","id","eliminarActividad","error","onClick","className","size","color","items","fields","key","label","_style","width","sorter","filter","columnFilter","tableFilter","footer","itemsPerPageSelect","itemsPerPage","hover","pagination","scopedSlots","item","index","variant","shape","position","indexOf","newDetails","slice","splice","toggleDetails","includes","show","onClose","closeButton","onChange","placeholder","hidden"],"mappings":"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","file":"static/js/36.45590cb4.chunk.js","sourcesContent":["import Swal from 'sweetalert2';\r\n\r\nconst Alertas = (props) => {\r\n    Swal.fire({\r\n        title: '¿Eliminar Actividad?',\r\n        text: \"Está seguro de eliminar esta Actividad!\",\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Si, eliminar!'\r\n        }).then((result) => {\r\n        if (result.isConfirmed) {\r\n            Swal.fire(\r\n            'Eliminado!',\r\n            'Actividad eliminada correctamente',\r\n            'success'\r\n            )\r\n        }\r\n        })\r\n}\r\n\r\nconst AlertaFormulario=(mensaje)=>{\r\n    Swal.fire({\r\n        icon: 'error',\r\n        title: 'Error...',\r\n        text: mensaje,\r\n      })\r\n}\r\n\r\nconst AlertaMensajeExito = (mensaje)=>{\r\n    Swal.fire({\r\n        icon: 'success',\r\n        title: 'Exito...',\r\n        text: mensaje,\r\n      })\r\n}\r\nexport default {Alertas, AlertaFormulario, AlertaMensajeExito};","import React,{useState, useEffect} from 'react'\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CDataTable,\r\n  CCollapse,\r\n  CButton,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CFormGroup,\r\n  CInputGroup,\r\n  CInputGroupPrepend,\r\n  CInputGroupText,\r\n  CInput,\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport axios from 'axios';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Swal from 'sweetalert2';\r\nimport alertas from '../utils/Alertas';\r\n\r\nconst Actividades = () => {\r\n  const [actividades, setActividades] = useState([]);\r\n\r\n  const [consulta, setConsulta] = useState(true);\r\n  const [modal, setModal] = useState(false);\r\n  const [actividad, setActividad] = useState({\r\n    name:''\r\n  });\r\n\r\n  useEffect(() => {\r\n    const obtenerActividad = async () => {\r\n      try {\r\n        const resultado = await axios.get('http://3.90.64.114/api/v1/web/activities');\r\n        setActividades(resultado.data);\r\n        setConsulta(false);  \r\n        console.log(actividades);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    obtenerActividad();\r\n  }, [consulta]);\r\n\r\n  const [details, setDetails] = useState([])\r\n\r\n  const toggleDetails = (index) => {\r\n    const position = details.indexOf(index)\r\n    let newDetails = details.slice()\r\n    if (position !== -1) {\r\n      newDetails.splice(position, 1)\r\n    } else {\r\n      newDetails = [...details, index]\r\n    }\r\n    setDetails(newDetails)\r\n  }\r\n\r\n  const fields = [\r\n    { key: 'id', label:'Id', _style: { width: '10%'} },\r\n    { key: 'name', label:'Actividad', _style: { width: '40%'} },\r\n    {\r\n      key: 'Opciones',\r\n      label: '',\r\n      _style: { width: '1%' },\r\n      sorter: false,\r\n      filter: false\r\n    }\r\n  ]\r\n\r\n  const agregar=()=>\r\n  {\r\n    setActividad({\r\n      name:''\r\n    });\r\n    setModal(!modal);\r\n  }\r\n\r\n  const editar=()=>{  \r\n    setModal(!modal)\r\n  }\r\n\r\n   const handleChange= e =>{\r\n    const {name, value} = e.target;\r\n    setActividad(prevState=>({\r\n      ...prevState,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const editarActividad=(consola, caso)=>{\r\n    console.log(consola);\r\n    setActividad(consola);\r\n    editar();\r\n  }\r\n\r\n  const grabar=async()=>{\r\n\r\n    if (actividad.name.trim() ==='') {\r\n      alertas.AlertaFormulario(\"Ingrese Actividad\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await axios.post('http://3.90.64.114/api/v1/web/activities', actividad);\r\n      setConsulta(true);\r\n      alertas.AlertaMensajeExito(\"Actividad ingresada correctamente\");\r\n      setModal(!modal)\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n    \r\n   const eliminar = async(id)=>{\r\n    Swal.fire({\r\n      title: '¿Eliminar Actividad?',\r\n      text: \"Está seguro de eliminar esta Actividad!\",\r\n      icon: 'warning',\r\n      confirmButtonColor: '#3085d6',\r\n      confirmButtonText: 'Si, eliminar!',\r\n      showCancelButton: true,\r\n      cancelButtonColor: '#d33',\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        eliminarActividad();\r\n        Swal.fire(\r\n          'Eliminado!',\r\n          'Actividad eliminada correctamente',\r\n          'success'\r\n        )\r\n      }\r\n    })\r\n  }\r\n\r\n  const eliminarActividad = async () => {\r\n    try {\r\n      // const resultado = await axios.get('http://3.90.64.114/api/v1/web/activities');\r\n      // setActividades(resultado.data);\r\n      // setConsulta(true);\r\n      console.log(actividades);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CRow>\r\n        <CCol>\r\n          <CCard>\r\n            <CCardHeader>\r\n              Actividades              \r\n              <CButton \r\n              onClick={() =>  agregar()} \r\n              className=\"mr-1\"\r\n              size=\"sm\" \r\n              color=\"primary\"\r\n            >Nuevo</CButton>\r\n\r\n            </CCardHeader>\r\n            <CCardBody>\r\n            <CDataTable\r\n              items={actividades}\r\n              fields={fields}\r\n              columnFilter\r\n              tableFilter\r\n              footer\r\n              itemsPerPageSelect\r\n              itemsPerPage={5}\r\n              hover\r\n              sorter\r\n              pagination\r\n              scopedSlots = {{\r\n                'Opciones':\r\n                  (item, index)=>{\r\n                    return (\r\n                      <td className=\"py-2\">\r\n                        <CButton\r\n                          color=\"primary\"\r\n                          variant=\"outline\"\r\n                          shape=\"square\"\r\n                          size=\"sm\"\r\n                          onClick={()=>{toggleDetails(index)}}\r\n                        >\r\n                          {details.includes(index) ? 'Ocultar' : 'Opciones'}\r\n                        </CButton>\r\n                      </td>\r\n                      )\r\n                  },\r\n                'details':\r\n                    (item, index)=>{\r\n                      return (\r\n                      <CCollapse show={details.includes(index)}>\r\n                        <CCardBody>\r\n                          <h4>\r\n                            {item.name}\r\n                          </h4>\r\n                          <p className=\"text-muted\">{/*User since: {item.categoria}} */}</p>\r\n                          <CButton key={item.id} size=\"sm\" color=\"info\"\r\n                           onClick={()=>editarActividad(item, 'Editar')}>\r\n                            <CIcon name=\"cil-pencil\" className=\"mfe-2\" /> \r\n                            Editar\r\n                          </CButton>\r\n                          <CButton onClick={()=>eliminar(item.id)}\r\n                          size=\"sm\" color=\"danger\" className=\"ml-1\">\r\n                          <CIcon name=\"cil-trash\" className=\"mfe-2\" /> \r\n                            Eliminar\r\n                          </CButton>\r\n                        </CCardBody>\r\n                      </CCollapse>\r\n                    )\r\n                  }\r\n              }}/>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n\r\n{/* Modal agregar */}\r\n     <CRow>\r\n      <CCol>\r\n        <CCard>\r\n          <CCardBody>\r\n            <CModal \r\n              show={modal} \r\n              onClose={setModal}\r\n            >\r\n              <CModalHeader closeButton>\r\n                <CModalTitle>Actividad</CModalTitle>\r\n              </CModalHeader>\r\n              <CModalBody>\r\n              <CFormGroup>\r\n                  <CInputGroup>\r\n                    <CInputGroupPrepend>\r\n                      <CInputGroupText>Nombre:</CInputGroupText>\r\n                    </CInputGroupPrepend>\r\n                    <CInput name=\"id\" onChange={handleChange} value={actividad.id} placeholder=\"\" hidden />\r\n                    <CInput name=\"name\" onChange={handleChange} value={actividad.name} placeholder=\"Actividad\" />\r\n                  </CInputGroup>\r\n                </CFormGroup>\r\n                \r\n              </CModalBody>\r\n              <CModalFooter>                \r\n                <CButton \r\n                  color=\"danger\" \r\n                  onClick={() => setModal(false)}\r\n                >\r\n                  <CIcon name=\"cil-x-circle\" className=\"md\" />\r\n                  {' '}Cancelar\r\n                  </CButton>\r\n                <CButton color=\"primary\" onClick={()=>grabar()}>\r\n                <CIcon name=\"cil-save\" className=\"mfe-2\" />\r\n                 Grabar\r\n                </CButton>{' '}\r\n              </CModalFooter>\r\n            </CModal>\r\n            <hr />\r\n\r\n           </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n    </CRow>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Actividades;"],"sourceRoot":""}