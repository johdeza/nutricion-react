{"version":3,"sources":["views/pages/perfil/Perfil.js"],"names":["Pacientes","useState","nutriologos","setNutriologos","useEffect","a","axios","get","resultado","data","console","log","obtenerCita","xs","md","action","method","className","row","htmlFor","type","id","name","placeholder","autoComplete","color"],"mappings":"wNAsGeA,UAnFG,WAAO,IAAD,EAEgBC,mBAAS,IAFzB,mBAEfC,EAFe,KAEFC,EAFE,OAIIF,oBAAS,GAJb,6BAoBtB,OAbAG,qBAAU,YACS,uCAAG,4BAAAC,EAAA,+EAEQC,IAAMC,IAAI,kDAFlB,OAEVC,EAFU,OAGhBL,EAAeK,EAAUC,MACzBC,QAAQC,IAAIT,GAJI,gDAMhBQ,QAAQC,IAAR,MANgB,yDAAH,qDASjBC,KACC,IAGD,oCACE,kBAAC,KAAD,KACE,kBAAC,IAAD,CAAMC,GAAG,KAAKC,GAAG,MACf,kBAAC,IAAD,KACE,kBAAC,IAAD,eAGA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAO,GAAGC,OAAO,OAAOC,UAAU,mBACvC,kBAAC,IAAD,CAAYC,KAAG,GACb,kBAAC,IAAD,CAAMJ,GAAG,KACP,kBAAC,KAAD,CAAQK,QAAQ,YAAhB,YAEF,kBAAC,IAAD,CAAMN,GAAG,IAAIC,GAAG,KACd,kBAAC,IAAD,CAAQM,KAAK,QAAQC,GAAG,WAAWC,KAAK,WAAWC,YAAY,iBAAiBC,aAAa,WAGjG,kBAAC,IAAD,CAAYN,KAAG,GACb,kBAAC,IAAD,CAAMJ,GAAG,KACP,kBAAC,KAAD,CAAQK,QAAQ,YAAhB,kBAEF,kBAAC,IAAD,CAAMN,GAAG,IAAIC,GAAG,KACd,kBAAC,IAAD,CAAQM,KAAK,QAAQC,GAAG,WAAWC,KAAK,WAAWC,YAAY,uBAAoBC,aAAa,WAGpG,kBAAC,IAAD,CAAYN,KAAG,GACb,kBAAC,IAAD,CAAMJ,GAAG,KACP,kBAAC,KAAD,CAAQK,QAAQ,YAAhB,iBAEF,kBAAC,IAAD,CAAMN,GAAG,IAAIC,GAAG,KACd,kBAAC,IAAD,CAAQM,KAAK,QAAQC,GAAG,WAAWC,KAAK,WAAWC,YAAY,sBAAmBC,aAAa,WAGnG,kBAAC,IAAD,CAAYN,KAAG,GACb,kBAAC,IAAD,CAAMJ,GAAG,KACP,kBAAC,KAAD,CAAQK,QAAQ,YAAhB,WAEF,kBAAC,IAAD,CAAMN,GAAG,IAAIC,GAAG,KACd,kBAAC,IAAD,CAAQM,KAAK,QAAQC,GAAG,WAAWC,KAAK,WAAWC,YAAY,gBAAgBC,aAAa,WAIhG,kBAAC,IAAD,CAAYN,KAAG,GACb,kBAAC,IAAD,CAAML,GAAG,IAAIC,GAAG,KAChB,kBAAC,IAAD,CAEEG,UAAU,OACVQ,MAAM,WAHR","file":"static/js/57.00768104.chunk.js","sourcesContent":["import React,{useState, useEffect} from 'react'\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CButton,\r\n  CForm,\r\n  CFormGroup,\r\n  CInput,\r\n  CLabel,\r\n} from '@coreui/react'\r\nimport axios from 'axios';\r\n// import {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Modal, ModalBody, ModalFooter, ModalHeader} from 'reactstrap';\r\n// import {faEdit, faTrashAlt} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Pacientes = () => {\r\n\r\n  const [nutriologos, setNutriologos] = useState([]);\r\n\r\n  const [modal, setModal] = useState(false)\r\n\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  useEffect(() => {\r\n    const obtenerCita = async () => {\r\n      try {\r\n        const resultado = await axios.get('http://3.90.64.114/api/v1/mobile/nutriologist/');\r\n        setNutriologos(resultado.data);\r\n        console.log(nutriologos);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    obtenerCita();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <CRow>\r\n        <CCol xs=\"12\" md=\"12\">\r\n          <CCard>\r\n            <CCardHeader>\r\n              Perfil\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CForm action=\"\" method=\"post\" className=\"form-horizontal\">\r\n                <CFormGroup row>\r\n                  <CCol md=\"1\">\r\n                    <CLabel htmlFor=\"hf-email\">Nombre:</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"1\" md=\"3\">\r\n                    <CInput type=\"email\" id=\"hf-email\" name=\"hf-email\" placeholder=\"Ingrese Nombre\" autoComplete=\"text\" />\r\n                  </CCol>\r\n                </CFormGroup>\r\n                <CFormGroup row>\r\n                  <CCol md=\"1\">\r\n                    <CLabel htmlFor=\"hf-email\">Dirección:</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"1\" md=\"3\">\r\n                    <CInput type=\"email\" id=\"hf-email\" name=\"hf-email\" placeholder=\"Ingrese Dirección\" autoComplete=\"text\" />\r\n                  </CCol>\r\n                </CFormGroup>\r\n                <CFormGroup row>\r\n                  <CCol md=\"1\">\r\n                    <CLabel htmlFor=\"hf-email\">Teléfono:</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"1\" md=\"3\">\r\n                    <CInput type=\"email\" id=\"hf-email\" name=\"hf-email\" placeholder=\"Ingrese Teléfono\" autoComplete=\"text\" />\r\n                  </CCol>\r\n                </CFormGroup>\r\n                <CFormGroup row>\r\n                  <CCol md=\"1\">\r\n                    <CLabel htmlFor=\"hf-email\">Email:</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"1\" md=\"3\">\r\n                    <CInput type=\"email\" id=\"hf-email\" name=\"hf-email\" placeholder=\"Ingrese Email\" autoComplete=\"text\" />\r\n                  </CCol>\r\n                </CFormGroup>\r\n           \r\n                <CFormGroup row>\r\n                  <CCol xs=\"1\" md=\"3\">\r\n                  <CButton \r\n                    // onClick={() => setModal(!modal)} \r\n                    className=\"mr-1\"\r\n                    color=\"success\"\r\n                    >Actualizar</CButton>\r\n                  </CCol>\r\n                  </CFormGroup>\r\n              </CForm>\r\n\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n      \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Pacientes;"],"sourceRoot":""}